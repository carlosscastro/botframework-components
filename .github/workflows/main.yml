# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      botbuilderVersion:
        description: 'Bot Framework SDK version to verify.'     
        required: true
        default: '4.13.0-daily.20210327.228178.2d51159'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Log SDK version
        run: |
          echo "Using bot builder SDK version ${{ github.event.inputs.botbuilderVersion }}"
          ls

      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js '14.x'
        uses: actions/setup-node@v1
        
      - name: Dotnet build test component and add component as local nuget source
        working-directory: ./test/generators/components/BotFramework.Components.Tests/BotFramework.Components.TestComponents
        run: |
          dotnet nuget add source https://botbuilder.myget.org/F/botbuilder-v4-dotnet-daily/api/v3/index.json
          dotnet build BotFramework.Components.TestComponents.csproj -property:BotBuilderVersion=${{ github.event.inputs.botbuilderVersion }}
          dotnet nuget add source '/home/runner/work/botframework-components/botframework-components/test/generators/components/BotFramework.Components.Tests/BotFramework.Components.TestComponents/outputpackages'
          dotnet nuget list source
        
      - name: Install yeoman
        run: |
          npm install -g yo
        
      - name: Install generator
        working-directory: ./test/generators/generator-bot-test
        run: |
          yarn install
          
      - name: Invoke generator
        run: |
          yo ./test/generators/generator-bot-test/generators/app/index.js 'testbot' '${{ github.event.inputs.botbuilderVersion }}'
          cat testbot/testbot.csproj
          
      - name: Dotnet build generator
        run: |
          dotnet build testbot/testbot.csproj -property:BotBuilderVersion=${{ github.event.inputs.botbuilderVersion }}
      
      - name: Dotnet run generator in 3978
        run: |
          dotnet run --project testbot/testbot.csproj &
          sleep 10   
          
      - name: Dotnet build test project
        working-directory: ./test/generators/components/BotFramework.Components.Tests/BotFramework.Components.Tests
        run: |
          dotnet build BotFramework.Components.Tests.csproj -property:BotBuilderVersion=${{ github.event.inputs.botbuilderVersion }}
          
      - name: Dotnet run test project
        working-directory: ./test/generators/components/BotFramework.Components.Tests/BotFramework.Components.Tests
        run: |
          dotnet test BotFramework.Components.Tests.csproj
